apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def localProperties = new Properties()
try {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
} catch (Exception e) {
    logger.warn("No Local Properties File Found!")
}

android {
    signingConfigs {
        release {
            storeFile file('keystore/androidtv.keystore')
            storePassword 'foxpassword123'
            keyAlias 'foxnow'
            keyPassword 'foxpassword123'
        }
    }
    compileSdkVersion 31

    defaultConfig {
        applicationId 'com.fng.foxnation.qa'
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 9
        versionName "1.5.1"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
        if (!localProperties['base64EncodedPublicKey']) {
            logger.warn('base64EncodedPublicKey must be set for signature verification. ' +
                    'You can add it to local.properties once you have gotten it from Play. ' +
                    'Example: base64EncodedPublicKey=[key value]')
        }
        buildConfigField("String", "BASE64_ENCODED_PUBLIC_KEY", "\"" + localProperties['base64EncodedPublicKey'] + "\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    buildFeatures {
        dataBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "junit:junit:$version_junit"
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "com.android.billingclient:billing-ktx:$version_billing"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraintlayout"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$version_coordinatorlayout"
    implementation "com.google.android.material:material:$version_material"

    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    implementation "androidx.lifecycle:lifecycle-process:$version_lifecycle"
    kapt "androidx.room:room-compiler:$version_room"

    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin"
    implementation "androidx.core:core-ktx:$version_core_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"

    // The following rules are for compiling on environments running JDK9+.
    // In this project, these rules are necessary because data binding is enabled. It fixes the
    // error 'java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException' that occurs when
    // the project is assembled through the command line with an environment running JDK9+.
    compileOnly "com.github.pengrad:jdk9-deps:$jdk9DepsVersion"
    if (project.hasProperty('kapt')) {
        kapt "javax.xml.bind:jaxb-api:$jaxbApiVersion"
        kapt "com.sun.xml.bind:jaxb-core:$jaxbCoreVersion"
        kapt "com.sun.xml.bind:jaxb-impl:$jaxbImpl"
    }
    annotationProcessor "javax.xml.bind:jaxb-api:$jaxbApiVersion"
    annotationProcessor "com.sun.xml.bind:jaxb-core:$jaxbCoreVersion"
    annotationProcessor "com.sun.xml.bind:jaxb-impl:$jaxbImpl"
}
repositories {
    mavenCentral()
}